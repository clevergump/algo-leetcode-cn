package com.leetcodecn._38_easy;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

class _38_My1Test {

    @Test
    void countAndSay() {
        Assertions.assertEquals(new _38_My1().countAndSay(1), "1");
        Assertions.assertEquals(new _38_My1().countAndSay(2), "11");
        Assertions.assertEquals(new _38_My1().countAndSay(3), "21");
        Assertions.assertEquals(new _38_My1().countAndSay(4), "1211");
        Assertions.assertEquals(new _38_My1().countAndSay(5), "111221");
        Assertions.assertEquals(new _38_My1().countAndSay(6), "312211");
        Assertions.assertEquals(new _38_My1().countAndSay(7), "13112221");
        Assertions.assertEquals(new _38_My1().countAndSay(8), "1113213211");
        Assertions.assertEquals(new _38_My1().countAndSay(9), "31131211131221");
        Assertions.assertEquals(new _38_My1().countAndSay(10), "13211311123113112211");
        Assertions.assertEquals(new _38_My1().countAndSay(11), "11131221133112132113212221");
        Assertions.assertEquals(new _38_My1().countAndSay(12), "3113112221232112111312211312113211");
        Assertions.assertEquals(new _38_My1().countAndSay(13), "1321132132111213122112311311222113111221131221");
        Assertions.assertEquals(new _38_My1().countAndSay(14), "11131221131211131231121113112221121321132132211331222113112211");
        Assertions.assertEquals(new _38_My1().countAndSay(15), "311311222113111231131112132112311321322112111312211312111322212311322113212221");
        Assertions.assertEquals(new _38_My1().countAndSay(16), "132113213221133112132113311211131221121321131211132221123113112221131112311332111213211322211312113211");
        Assertions.assertEquals(new _38_My1().countAndSay(17), "11131221131211132221232112111312212321123113112221121113122113111231133221121321132132211331121321231231121113122113322113111221131221");
        Assertions.assertEquals(new _38_My1().countAndSay(18), "31131122211311123113321112131221123113112211121312211213211321322112311311222113311213212322211211131221131211132221232112111312111213111213211231131122212322211331222113112211");
        Assertions.assertEquals(new _38_My1().countAndSay(19), "1321132132211331121321231231121113" +
                "1122211213211321223112111311222112111312211312111322211213211321322123211211131211121332211" +
                "23113112221131112311332111213122112311311123112111331121113122112132113213211121332212311322113212221");
        Assertions.assertEquals(new _38_My1().countAndSay(20), "11131221131211132221232112111312111" +
                "21311121321123113213221121113122113121122132112311321322112311311222113111231133221121113122" +
                "11312111322111213122112311311123112112322211213211321322113311213212312311211131122211213211" +
                "33112132112312321123113112221121113122113121113123112112322111213211322211312113211");
        Assertions.assertEquals(new _38_My1().countAndSay(21), "311311222113111231133211121312211231" +
                "131112311211133112111312211213211312111322211231131122211311122122111312211213211312111322211" +
                "213211321322113311213212322211231131122211311123113223112111311222112132113311213211221121332" +
                "211211131221131211132221232112111312111213111213211231132132211211131221232112111312211213111" +
                "213122112132113213221123113112221131112311311121321122112132231121113122113322113111221131221");
        Assertions.assertEquals(new _38_My1().countAndSay(22), "1321132132211331121321231231121113112" +
                "2211213211331121321123123211231131122211211131221131112311332211213211321322113312211223113112" +
                "2211211131221131112311332211211131221131211132221232112111312111213322112132113213221133112132" +
                "1132213211231132132211211131221232112111312212221121123222112311311222113111231133211121312211" +
                "2311311123112111331121113122112132113121113222112311311221112131221123113112221121113311211131" +
                "1222112111312211312111322211213211321322113311213211331121113122122211211132213211231131122212" +
                "322211331222113112211");
        Assertions.assertEquals(new _38_My1().countAndSay(23), "111312211312111322212321121113121112131112132112311321322112111312212321121113122112131112131221121321132132211231131122211331121321232221121113122113121113222123112221221321132132211231131122211331121321232221123113112221131112311332111213122112311311123112112322211211131221131211132221232112111312211322111312211213211312111322211231131122111213122112311311221132211221121332211213211321322113311213212312311211131122211213211331121321123123211231131122211211131221131112311332211213211321223112111311222112132113213221123123211231132132211231131122211311123113322112111312211312111322212321121113122123211231131122113221123113221113122112132113213211121332212311322113212221");
        Assertions.assertEquals(new _38_My1().countAndSay(24), "31131122211311123113321112131221123113" +
                "11123112111331121113122112132113121113222112311311221112131221123113112221121113311211131122211" +
                "21113122113121113222112132113213221232112111312111213322112311311222113111231133211121321321122" +
                "11131221131211132221121321132132212321121113121112133221121321132132211331121321231231121113112" +
                "22112132113311213211221121332211231131122211311123113321112131221123113112221132231131122211211" +
                "13122113111231133221121321132122311211131122211213211321222113222122211211232221121113122113121" +
                "11322212321121113121112131112132112311321322112111312212321121113122112131112131221121321132132" +
                "21123113112221133112132123222112111312211312112213211231132132211211131221131211132221121311121" +
                "31221121321131211132221121321132132211331121321232221123113112221131112311332111213122112311311" +
                "22111213122112132113212221132221121321132231131122211211131221131211131231121123221112132113222" +
                "11312113211");
        Assertions.assertEquals(new _38_My1().countAndSay(25), "132113213221133112132123123112111311222" +
                "112132113311213211231232112311311222112111312211311123113322112132113212231121113112221121321132" +
                "132211231232112311321322112311311222113111231133221121113122113121113221112131221123113111231121" +
                "123222112132113213221133112132123123112111312111312212231131122211311123113322112111312211312111" +
                "3221112131221123113111231121123222112111312211312111322212321121113121112131112132112311321322112" +
                "1113122123211211131221222112112322211213211321322113311213212312311211131122211213211321322113221" +
                "3211321322112311311222113311213212322211211131221131211221321123113213221121113122113121132211332" +
                "1132211221121332211231131122211311123113321112131221123113111231121113311211131221121321131211132" +
                "2211231131122111213122112311311222112111331121113112221121113122113121113222112132113213221232112" +
                "1113121112133221123113112221131112212211131221121321131211132221123113112221131112311332211211133" +
                "1121113112221121113122113111231133221121113122113121113222123211211131211121332211213211321322113" +
                "3112132123123112111311222112132113212231121113112221121113122113121132211332211211131221132213211" +
                "3213221123113112221131112311311121321122112132231121113122113322113111221131221");
        Assertions.assertEquals(new _38_My1().countAndSay(26), "11131221131211132221232112111312111213111" +
                "21321123113213221121113122123211211131221121311121312211213211321322112311311222113311213212322211" +
                "21113122113121122132112311321322112111312211312111322211213111213122112132113121113222112132113213" +
                "221133112132123222112311311222113111231132231121113112221121321133112132112211213322112111312211312" +
                "11132221232112111312111213111213211231131112311311221122132113213221133112132123222112311311222113" +
                "11123113223112111311222112132113311213211221121332211231131122211311123113321112131221123113111231" +
                "1211133112111312211213211312111322211231131122111213122112311311221132211221121332211211131221131" +
                "2111322212321121113121112131112132112311321322112111312211312111322211322111312211312111322211213" +
                "2113213221232112111312111213322112311311222113111221221113122112132113121113222112311311222113111" +
                "22113222123122113222122211211232221121321132132211331121321231231121113112221121321133112132112312" +
                "32112311311222112111312211311123113322112132113212231121113112221121321132132211231232112311321322" +
                "11231131122211311123113322112111312211312111322111213122112311311123112112322211213211321322113312" +
                "21122311311222112111312211311123113322112132113213221133112132123222112312321123113213221123113112" +
                "22113311213212322211231131122211311123113321112131221123113111231121123222112111312211312111322212" +
                "32112111312111213111213211231132132211211131221131211221321123113213221123113112221131112211322212" +
                "32221123113112221132211131221131211132221121321132132211331121321133112111312212221121113221321123" +
                "1131122212322211331222113112211");
        Assertions.assertEquals(new _38_My1().countAndSay(27), "311311222113111231133211121312211231131112" +
                "311211133112111312211213211312111322211231131122111213122112311311222112111331121113112221121113122" +
                "11312111322211213211321322123211211131211121332211231131122211311122122111312211213211312111322211" +
                "23113112221131112311332211211133112111311222112111312211311123113322112111312211312111322212321121" +
                "11312111213322112132113213221133112132113221321123113213221121113122123211211131221222112112322211" +
                "23113112221131112311332111213122112311311123112111331121113122112132113311213211321222122111312211" +
                "31211132221232112111312111213322112132113213221133112132113221321123113213221121113122123211211131" +
                "22122211211232221121321132132211331121321231231121113112221121321133112132112312321123113112221121" +
                "11312211311123113322112132113212231121113112221121321132122211322212221121123222112311311222113111" +
                "23113321112131221123113111231121113311211131221121321131211132221123113112221131112311332211322311" +
                "31122211311123113322112111312211312111322111213122112311311123112112322211213211321322113312211223" +
                "11311222112111312211311123113322112132113213221133122211332111213112221133211322112211213322112111" +
                "31221131211132221232112111312111213111213211231132132211211131221232112111312211213111213122112132" +
                "11321322112311311222113311213212322211211131221131211221321123113213221121113122113121113222112131" +
                "11213122112132113121113222112132113213221133112132123222112311311222113111231132231121113112221121" +
                "321133112132112211213322112111312211312111322212311222122132113213221123113112221133112132123222112" +
                "111312211312111322212321121113121112133221121311121312211213211312111322211213211321322123211211131" +
                "211121332211213211321322113311213212312311211131122211213211331121321122112133221123113112221131112" +
                "31133211121312211231131112311211133112111312211213211312111322211231131122211311122122111312211213" +
                "211312111322211213211321322113312221133211121332211213211321322113223113112221131112311332211211131" +
                "221131211132221232112111312212321123113112211322112311322111312211213211321321112133221231132211321" +
                "2221");
        Assertions.assertEquals(new _38_My1().countAndSay(28), "132113213221133112132123123112111311222112" +
                "1321133112132112312321123113112221121113122113111231133221121321132122311211131122211213211321322" +
                "11231232112311321322112311311222113111231133221121113122113121113221112131221123113111231121123222" +
                "1121321132132211331221122311311222112111312211311123113322112132113213221133112132123222112312321" +
                "123113213221123113112221133112132123222112311311222113111231133211121312211231131112311211232221" +
                "1211131221131211132221232112111312211322111312211213211312111322211231131122111213122112311311221" +
                "132211221121332211213211321322113311213212312311211131122211213211331121321123123211231131122211" +
                "2111312212321121113122113121132112231131122211311123113321112131221123113111231121123222112111312" +
                "2113121113222123211211131221132211131221121321131211132221123113112211121312211231131122113221122" +
                "1121332211211131221131211132221232112111312111213111213211231132132211211131221232112111312211213" +
                "1112131221121321132132211231131122211331121321232221121113122113121122132112311321322112111312211" +
                "3121132211332113221122112133221121321132132211331121321231231121113112221121321133112132112312321" +
                "1231131122211211131221131112311332211213211321322113311213212322211322132113213221133112132123222" +
                "1123113112221131112311322311211131122211213211331121321122112133221121113122113121113222123112221" +
                "2213211321322112311311222113311213212322211211131221131211132221231132212312311211132132212312211" +
                "3222122211211232221123113112221131112311332111213122112311311123112111331121113122112132113121113" +
                "2221123113112211121312211231131122211211133112111311222112111312211312111322211213211321322123211" +
                "2111312111213322112311311222113111221221113122112132113121113222112311311222113111231133221121113" +

        Assertions.assertEquals(new _38_My1().countAndSay(29), "11131221131211132221232112111312111213111213211231132132211211131221232112111312211213111213122112132113213221123113112221133112132123222112111312211312112213211231132132211211131221131211132221121311121312211213211312111322211213211321322113311213212322211231131122211311123113223112111311222112132113311213211221121332211211131221131211132221231122212213211321322112311311222113311213212322211211131221131211132221232112111312111213322112131112131221121321131211132221121321132132212321121113121112133221121321132132211331121321231231121113112221121321133112132112211213322112311311222113111231133211121312211231131122211322311311222112111312211311123113322112132113212231121113112221121321132122211322212221121123222112111312211312111322212321121113121112131112132112311321322112111312212321121113122112131112131221121321132132211231131122111213122112311311222113111221131221221321132132211331121321231231121113112221121321133112132112211213322112311311222113111231133211121312211231131122211322311311222112111312211311123113322112132113212231121113112221121321132122211322212221121123222112311311222113111231133211121312211231131112311211133112111312211213211312111322211231131122111213122112311311222112111331121113112221121113122113121113222112132113213221232112111312111213322112311311222113111221221113122112132113121113222112311311222113111221132221231221132221222112112322211211131221131211132221232112111312111213111213211231132132211211131221232112111312211213111213122112132113213221123113112221133112132123222112111312211312111322212321121113121112133221132211131221131211132221232112111312111213322112132113213221133112132113221321123113213221121113122123211211131221222112112322211231131122211311123113321112132132112211131221131211132221121321132132212321121113121112133221123113112221131112311332111213211322111213111213211231131211132211121311222113321132211221121332211213211321322113311213212312311211131122211213211331121321123123211231131122211211131221131112311332211213211321223112111311222112132113213221123123211231132132211231131122211311123113322112111312211312111322111213122112311311123112112322211213211321322113312211223113112221121113122113111231133221121321132132211331121321232221123123211231132132211231131122211331121321232221123113112221131112311332111213122112311311123112112322211211131221131211132221232112111312211322111312211213211312111322211231131122111213122112311311221132211221121332211213211321322113311213212312311211131211131221223113112221131112311332211211131221131211132211121312211231131112311211232221121321132132211331121321231231121113112221121321133112132112211213322112312321123113213221123113112221133112132123222112311311222113111231132231121113112221121321133112132112211213322112311311222113111231133211121312211231131112311211133112111312211213211312111322211231131122111213122112311311221132211221121332211211131221131211132221232112111312111213111213211231132132211211131221232112111312211213111213122112132113213221123113112221133112132123222112111312211312111322212311222122132113213221123113112221133112132123222112311311222113111231133211121321132211121311121321122112133221123113112221131112311332211322111312211312111322212321121113121112133221121321132132211331121321231231121113112221121321132122311211131122211211131221131211322113322112111312211322132113213221123113112221131112311311121321122112132231121113122113322113111221131221");
        Assertions.assertEquals(new _38_My1().countAndSay
    }
}